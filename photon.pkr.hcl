source "vsphere-iso" "autogenerated_1" {
  boot_wait = "15s"
  boot_command = [
    "<esc><wait>",
    "vmlinuz initrd=initrd.img root=/dev/ram0 loglevel=3 ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/photon-kickstart.json photon.media=cdrom",
    "<enter><wait>"
  ]

  vcenter_server      = var.vcenter_server
  username            = var.vcenter_username
  password            = var.vcenter_password
  insecure_connection = "true"

  datacenter = var.datacenter
  datastore  = var.datastore
  cluster    = var.cluster
  folder     = var.folder
  network_adapters {
    network      = var.network
    network_card = "vmxnet3"
  }

  vm_name           = var.vm_name
  vm_version        = 13
  ip_wait_timeout   = "3m"
  ip_settle_timeout = "2m"

  CPUs = "${var.numvcpus}"
  RAM  = "${var.ramsize}"
  storage {
    disk_size             = "20000"
    disk_thin_provisioned = "true"
  }

  export {
    force            = true
    output_directory = "./output-vmware-iso"
  }

  guest_os_type  = "vmwarePhoton64Guest"
  http_directory = "http"
  http_ip        = "10.255.254.6"

  iso_checksum = "${var.iso_checksum_type}:${var.iso_checksum}"
  iso_url      = "${var.iso_url}"


  shutdown_command = "/sbin/shutdown -h now"
  shutdown_timeout = "1000s"

  ssh_username           = "${var.guest_username}"
  ssh_password           = "${var.guest_password}"
  ssh_port               = 22
  ssh_timeout            = "60m"
  ssh_handshake_attempts = 1000

}

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "shell" {
    scripts = ["scripts/photon-settings.sh", "scripts/photon-cleanup.sh"]
  }

  provisioner "file" {
    destination = "/etc/rc.d/rc.local"
    source      = "files/rc.local"
  }

  provisioner "file" {
    destination = "/root/setup.sh"
    source      = "files/setup.sh"
  }

  post-processor "shell-local" {
    environment_vars = ["PHOTON_VERSION=${var.version}", "PHOTON_APPLIANCE_NAME=${var.vm_name}", "FINAL_PHOTON_APPLIANCE_NAME=${var.vm_name}_${var.version}", "PHOTON_OVF_TEMPLATE=${var.photon_ovf_template}"]
    inline           = ["cd manual", "./add_ovf_properties.sh"]
  }
}
